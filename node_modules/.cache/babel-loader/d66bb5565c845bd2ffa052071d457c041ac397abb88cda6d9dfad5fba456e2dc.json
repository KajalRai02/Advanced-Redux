{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n  }\n});\nconst sendCartData = async () => {\n  dispatch(uiActions.showNotifications({\n    status: 'pending',\n    title: 'Sending',\n    message: 'Sending cart details'\n  }));\n  const response = await fetch('https://asyncproject-f8b56-default-rtdb.firebaseio.com//cart.json', {\n    method: 'PUT',\n    body: JSON.stringify(cart)\n  });\n  if (!response.ok) {\n    throw new Error('Sending cart data fail');\n  }\n  dispatch(uiActions.showNotifications({\n    status: 'success',\n    title: 'Success',\n    message: 'Sent cart data successfully'\n  }));\n};\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItemFromCart","filter","sendCartData","dispatch","uiActions","showNotifications","status","message","response","fetch","method","body","JSON","stringify","cart","ok","Error","cartActions","actions"],"sources":["/home/kajal/Documents/React Projects/Redux Projects/asyncRedux/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst cartSlice=createSlice({\n    name:'cart',\n    initialState:{\n        items:[],\n        totalQuantity:0\n    },\n    reducers:{\n        addItemToCart(state,action) {\n            const newItem=action.payload;\n            const existingItem = state.items.find(item => item.id === newItem.id)\n            state.totalQuantity++\n            \n            if(!existingItem){\n                state.items.push({\n                    id:newItem.id,\n                    price:newItem.price,\n                    quantity:1,\n                    totalPrice:newItem.price,\n                    name:newItem.title\n                })\n            } else {\n                existingItem.quantity++\n                existingItem.totalPrice=existingItem.totalPrice+newItem.price\n            }\n\n        },\n        removeItemFromCart(state,action) {\n            const id=action.payload\n            const existingItem = state.items.find(item =>item.id === id)\n            state.totalQuantity--\n\n            if(existingItem.quantity === 1){\n                state.items = state.items.filter(item => item.id !== id)\n            }else{\n                existingItem.quantity--;\n                existingItem.totalPrice = existingItem.totalPrice - existingItem.price\n            }\n        }\n    }\n})\n\nconst sendCartData= async () =>{\n\n    dispatch(uiActions.showNotifications({\n      status:'pending',\n      title: 'Sending',\n      message:'Sending cart details'\n    }))\n    const response = await fetch('https://asyncproject-f8b56-default-rtdb.firebaseio.com//cart.json',\n      {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n    })\n    if(!response.ok){\n      throw new Error('Sending cart data fail')\n    }\n    dispatch(uiActions.showNotifications({\n      status:'success',\n      title: 'Success',\n      message:'Sent cart data successfully'\n    })\n  )\n};\n\n\nexport const cartActions= cartSlice.actions\n\nexport default cartSlice;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAACD,WAAW,CAAC;EACxBE,IAAI,EAAC,MAAM;EACXC,YAAY,EAAC;IACTC,KAAK,EAAC,EAAE;IACRC,aAAa,EAAC;EAClB,CAAC;EACDC,QAAQ,EAAC;IACLC,aAAaA,CAACC,KAAK,EAACC,MAAM,EAAE;MACxB,MAAMC,OAAO,GAACD,MAAM,CAACE,OAAO;MAC5B,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAK,CAACS,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MACrEP,KAAK,CAACH,aAAa,EAAE;MAErB,IAAG,CAACO,YAAY,EAAC;QACbJ,KAAK,CAACJ,KAAK,CAACY,IAAI,CAAC;UACbD,EAAE,EAACL,OAAO,CAACK,EAAE;UACbE,KAAK,EAACP,OAAO,CAACO,KAAK;UACnBC,QAAQ,EAAC,CAAC;UACVC,UAAU,EAACT,OAAO,CAACO,KAAK;UACxBf,IAAI,EAACQ,OAAO,CAACU;QACjB,CAAC,CAAC;MACN,CAAC,MAAM;QACHR,YAAY,CAACM,QAAQ,EAAE;QACvBN,YAAY,CAACO,UAAU,GAACP,YAAY,CAACO,UAAU,GAACT,OAAO,CAACO,KAAK;MACjE;IAEJ,CAAC;IACDI,kBAAkBA,CAACb,KAAK,EAACC,MAAM,EAAE;MAC7B,MAAMM,EAAE,GAACN,MAAM,CAACE,OAAO;MACvB,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAK,CAACS,IAAI,CAACC,IAAI,IAAGA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC5DP,KAAK,CAACH,aAAa,EAAE;MAErB,IAAGO,YAAY,CAACM,QAAQ,KAAK,CAAC,EAAC;QAC3BV,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,CAACkB,MAAM,CAACR,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC5D,CAAC,MAAI;QACDH,YAAY,CAACM,QAAQ,EAAE;QACvBN,YAAY,CAACO,UAAU,GAAGP,YAAY,CAACO,UAAU,GAAGP,YAAY,CAACK,KAAK;MAC1E;IACJ;EACJ;AACJ,CAAC,CAAC;AAEF,MAAMM,YAAY,GAAE,MAAAA,CAAA,KAAW;EAE3BC,QAAQ,CAACC,SAAS,CAACC,iBAAiB,CAAC;IACnCC,MAAM,EAAC,SAAS;IAChBP,KAAK,EAAE,SAAS;IAChBQ,OAAO,EAAC;EACV,CAAC,CAAC,CAAC;EACH,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mEAAmE,EAC9F;IACEC,MAAM,EAAE,KAAK;IACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACC,IAAI;EAC7B,CAAC,CAAC;EACF,IAAG,CAACN,QAAQ,CAACO,EAAE,EAAC;IACd,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;EAC3C;EACAb,QAAQ,CAACC,SAAS,CAACC,iBAAiB,CAAC;IACnCC,MAAM,EAAC,SAAS;IAChBP,KAAK,EAAE,SAAS;IAChBQ,OAAO,EAAC;EACV,CAAC,CACH,CAAC;AACH,CAAC;AAGD,OAAO,MAAMU,WAAW,GAAErC,SAAS,CAACsC,OAAO;AAE3C,eAAetC,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}