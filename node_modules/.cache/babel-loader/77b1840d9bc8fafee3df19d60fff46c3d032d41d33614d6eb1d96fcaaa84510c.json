{"ast":null,"code":"import { uiActions } from \"./ui-slice\";\nimport { cartActions } from \"./cart-slice\";\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch('https://asyncproject-f8b56-default-rtdb.firebaseio.com//cart.json');\n      if (!response.ok) {\n        throw new Error('Could not fetch Data');\n      }\n      const data = await response.json();\n      return data;\n    };\n    try {\n      const cartData = await fetchData();\n      dispatch(cartActions.replaceCart({\n        items: cartData.items || []\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotifications({\n        status: 'error',\n        title: 'Error',\n        message: 'Fetching cart data failed'\n      }));\n    }\n  };\n};\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotifications({\n      status: 'pending',\n      title: 'Sending',\n      message: 'Sending cart details'\n    }));\n    const sendRequest = async () => {\n      const response = await fetch('https://asyncproject-f8b56-default-rtdb.firebaseio.com//cart.json', {\n        method: 'PUT',\n        body: JSON.stringify({\n          items: cart.items,\n          totalQuantity: cart.totalQuantity\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Sending cart data fail');\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotifications({\n        status: 'success',\n        title: 'Success',\n        message: 'Sent cart data successfully'\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotifications({\n        status: 'error',\n        title: 'Error',\n        message: 'Sending cart data failed'\n      }));\n    }\n  };\n};","map":{"version":3,"names":["uiActions","cartActions","fetchCartData","dispatch","fetchData","response","fetch","ok","Error","data","json","cartData","replaceCart","items","error","showNotifications","status","title","message","sendCartData","cart","sendRequest","method","body","JSON","stringify","totalQuantity"],"sources":["/home/kajal/Documents/React Projects/Redux Projects/asyncRedux/src/store/cart-action.js"],"sourcesContent":["import { uiActions } from \"./ui-slice\";\nimport { cartActions } from \"./cart-slice\";\n\nexport const fetchCartData = () =>{\n    return async(dispatch) =>{\n        const fetchData = async () =>{\n            const response = await fetch(\n                'https://asyncproject-f8b56-default-rtdb.firebaseio.com//cart.json'\n            )\n\n            if(!response.ok){\n                throw new Error('Could not fetch Data')\n            }\n\n            const data = await response.json()\n\n            return data\n        }\n\n        try{\n            const cartData = await fetchData();\n            dispatch(cartActions.replaceCart({\n                items: cartData.items || [],\n                \n            }))\n        }catch(error){\n            dispatch(uiActions.showNotifications({\n                status:'error',\n                title: 'Error',\n                message:'Fetching cart data failed'\n              })\n            )\n\n        }\n    }\n}\n\n\n\n\nexport const sendCartData=  (cart) =>{\n\n    return async (dispatch)=>{\n        dispatch(\n            uiActions.showNotifications({\n            status:'pending',\n            title: 'Sending',\n            message:'Sending cart details'\n        })\n    )\n    const sendRequest = async () =>{\n        const response = await fetch('https://asyncproject-f8b56-default-rtdb.firebaseio.com//cart.json',\n            {\n              method: 'PUT',\n              body: JSON.stringify(\n                {\n                    items: cart.items, \n                    totalQuantity: cart.totalQuantity\n                })\n          })\n          if(!response.ok){\n            throw new Error('Sending cart data fail')\n          }\n\n    }\n    try{\n        await sendRequest();\n        dispatch(\n            uiActions.showNotifications({\n            status:'success',\n            title: 'Success',\n            message:'Sent cart data successfully'\n            })\n        )\n    }catch(error){\n        dispatch(uiActions.showNotifications({\n            status:'error',\n            title: 'Error',\n            message:'Sending cart data failed'\n          })\n        )\n\n    }\n}\n\n};"],"mappings":"AAAA,SAASA,SAAS,QAAQ,YAAY;AACtC,SAASC,WAAW,QAAQ,cAAc;AAE1C,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAK;EAC9B,OAAO,MAAMC,QAAQ,IAAI;IACrB,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAW;MACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACxB,mEACJ,CAAC;MAED,IAAG,CAACD,QAAQ,CAACE,EAAE,EAAC;QACZ,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;MAC3C;MAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAElC,OAAOD,IAAI;IACf,CAAC;IAED,IAAG;MACC,MAAME,QAAQ,GAAG,MAAMP,SAAS,CAAC,CAAC;MAClCD,QAAQ,CAACF,WAAW,CAACW,WAAW,CAAC;QAC7BC,KAAK,EAAEF,QAAQ,CAACE,KAAK,IAAI;MAE7B,CAAC,CAAC,CAAC;IACP,CAAC,QAAMC,KAAK,EAAC;MACTX,QAAQ,CAACH,SAAS,CAACe,iBAAiB,CAAC;QACjCC,MAAM,EAAC,OAAO;QACdC,KAAK,EAAE,OAAO;QACdC,OAAO,EAAC;MACV,CAAC,CACH,CAAC;IAEL;EACJ,CAAC;AACL,CAAC;AAKD,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAI;EAEjC,OAAO,MAAOjB,QAAQ,IAAG;IACrBA,QAAQ,CACJH,SAAS,CAACe,iBAAiB,CAAC;MAC5BC,MAAM,EAAC,SAAS;MAChBC,KAAK,EAAE,SAAS;MAChBC,OAAO,EAAC;IACZ,CAAC,CACL,CAAC;IACD,MAAMG,WAAW,GAAG,MAAAA,CAAA,KAAW;MAC3B,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAAC,mEAAmE,EAC5F;QACEgB,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAClB;UACIZ,KAAK,EAAEO,IAAI,CAACP,KAAK;UACjBa,aAAa,EAAEN,IAAI,CAACM;QACxB,CAAC;MACP,CAAC,CAAC;MACF,IAAG,CAACrB,QAAQ,CAACE,EAAE,EAAC;QACd,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;MAC3C;IAEN,CAAC;IACD,IAAG;MACC,MAAMa,WAAW,CAAC,CAAC;MACnBlB,QAAQ,CACJH,SAAS,CAACe,iBAAiB,CAAC;QAC5BC,MAAM,EAAC,SAAS;QAChBC,KAAK,EAAE,SAAS;QAChBC,OAAO,EAAC;MACR,CAAC,CACL,CAAC;IACL,CAAC,QAAMJ,KAAK,EAAC;MACTX,QAAQ,CAACH,SAAS,CAACe,iBAAiB,CAAC;QACjCC,MAAM,EAAC,OAAO;QACdC,KAAK,EAAE,OAAO;QACdC,OAAO,EAAC;MACV,CAAC,CACH,CAAC;IAEL;EACJ,CAAC;AAED,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}