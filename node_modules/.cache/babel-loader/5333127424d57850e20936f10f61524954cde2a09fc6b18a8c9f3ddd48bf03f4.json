{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { uiActions } from \"./ui-slice\";\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n  }\n});\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotifications({\n      status: 'pending',\n      title: 'Sending',\n      message: 'Sending cart details'\n    }));\n    const sendRequest = async () => {\n      const response = await fetch('https://asyncproject-f8b56-default-rtdb.firebaseio.com//cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error('Sending cart data fail');\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotifications({\n        status: 'success',\n        title: 'Success',\n        message: 'Sent cart data successfully'\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotifications({\n        status: 'error',\n        title: 'Error',\n        message: 'Sending cart data failed'\n      }));\n    }\n  };\n};\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","uiActions","cartSlice","name","initialState","items","totalQuantity","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItemFromCart","filter","sendCartData","cart","dispatch","showNotifications","status","message","sendRequest","response","fetch","method","body","JSON","stringify","ok","Error","error","cartActions","actions"],"sources":["/home/kajal/Documents/React Projects/Redux Projects/asyncRedux/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { uiActions } from \"./ui-slice\";\n\nconst cartSlice=createSlice({\n    name:'cart',\n    initialState:{\n        items:[],\n        totalQuantity:0\n    },\n    reducers:{\n        addItemToCart(state,action) {\n            const newItem=action.payload;\n            const existingItem = state.items.find(item => item.id === newItem.id)\n            state.totalQuantity++\n            \n            if(!existingItem){\n                state.items.push({\n                    id:newItem.id,\n                    price:newItem.price,\n                    quantity:1,\n                    totalPrice:newItem.price,\n                    name:newItem.title\n                })\n            } else {\n                existingItem.quantity++\n                existingItem.totalPrice=existingItem.totalPrice+newItem.price\n            }\n\n        },\n        removeItemFromCart(state,action) {\n            const id=action.payload\n            const existingItem = state.items.find(item =>item.id === id)\n            state.totalQuantity--\n\n            if(existingItem.quantity === 1){\n                state.items = state.items.filter(item => item.id !== id)\n            }else{\n                existingItem.quantity--;\n                existingItem.totalPrice = existingItem.totalPrice - existingItem.price\n            }\n        }\n    }\n})\n\nexport const sendCartData=  (cart) =>{\n\n    return async (dispatch)=>{\n        dispatch(\n            uiActions.showNotifications({\n            status:'pending',\n            title: 'Sending',\n            message:'Sending cart details'\n        })\n    )\n    const sendRequest = async () =>{\n        const response = await fetch('https://asyncproject-f8b56-default-rtdb.firebaseio.com//cart.json',\n            {\n              method: 'PUT',\n              body: JSON.stringify(cart)\n          })\n          if(!response.ok){\n            throw new Error('Sending cart data fail')\n          }\n\n    }\n    try{\n        await sendRequest();\n        dispatch(\n            uiActions.showNotifications({\n            status:'success',\n            title: 'Success',\n            message:'Sent cart data successfully'\n            })\n        )\n    }catch(error){\n        dispatch(uiActions.showNotifications({\n            status:'error',\n            title: 'Error',\n            message:'Sending cart data failed'\n          })\n        )\n\n    }\n}\n\n};\n\n\nexport const cartActions= cartSlice.actions\n\nexport default cartSlice;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}